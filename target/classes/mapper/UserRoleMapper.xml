<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xblog.mapper.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.xblog.core.model.po.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertUserRole" parameterType="com.xblog.core.model.po.UserRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_role (user_id, role_id)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
  </insert>
  <update id="updateById" parameterType="com.xblog.core.model.po.UserRole">
    update user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, role_id
    from user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllList" resultMap="BaseResultMap">
    select id, user_id, role_id
    from user_role
  </select>
</mapper>